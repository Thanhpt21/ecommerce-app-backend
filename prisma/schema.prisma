generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int               @id @default(autoincrement())
  name                   String
  email                  String            @unique
  password               String?
  role                   String            @default("customer")
  phoneNumber            String?
  gender                 String?
  profilePicture         String?
  profilePicturePublicId String?
  isActive               Boolean           @default(true)
  type_account           String            @default("normal")
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  ratings                Rating[]
  likedBlogs             Blog[]            @relation("BlogLikes")
  dislikedBlogs          Blog[]            @relation("BlogDislikes")
  blogsCreated           Blog[]            @relation("CreatedBlogs")
  shippingAddresses      ShippingAddress[]
  orders                 Order[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Category {
  id        Int       @id @default(autoincrement())
  title     String    @unique
  slug      String    @unique
  image     String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt


  // Self-referencing field for parent category
  parentId  Int?
  parent    Category? @relation("SubCategories", fields: [parentId], references: [id], onDelete: Cascade)

  // Field for sub-categories
  subCategories Category[] @relation("SubCategories")
}

model Brand {
  id        Int       @id @default(autoincrement())
  title     String    @unique
  image     String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Size {
  id        Int           @id @default(autoincrement())
  title     String        @unique
  products  ProductSize[]
  variants  VariantSize[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  OrderItem OrderItem[]
}

model Color {
  id        Int         @id @default(autoincrement())
  title     String      @unique
  code      String
  products  Product[]
  variants  Variant[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model Coupon {
  id            Int      @id @default(autoincrement())
  title         String
  code          String   @unique
  discount      Float
  expiresAt     DateTime
  usageLimit    Int
  usedCount     Int      @default(0)
  minOrderValue Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Order         Order[]
}

model Shipping {
  id           Int      @id @default(autoincrement())
  provinceName String   @unique
  fee          Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Config {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?
  mobile    String?
  address   String?
  googlemap String?
  facebook  String?
  zalo      String?
  instagram String?
  tiktok    String?
  youtube   String?
  x         String?
  linkedin  String?
  logo      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pick_province String? // T√™n t·ªânh/th√†nh ph·ªë l·∫•y h√†ng m·∫∑c ƒë·ªãnh
  pick_district String? // T√™n qu·∫≠n/huy·ªán l·∫•y h√†ng m·∫∑c ƒë·ªãnh
  pick_ward     String? // T√™n ph∆∞·ªùng/x√£ l·∫•y h√†ng m·∫∑c ƒë·ªãnh
  pick_address  String? // ƒê·ªãa ch·ªâ chi ti·∫øt l·∫•y h√†ng m·∫∑c ƒë·ªãnh (s·ªë nh√†, t√™n ƒë∆∞·ªùng, ...)
  pick_tel       String? // ‚≠ê Th√™m s·ªë ƒëi·ªán tho·∫°i c·ªßa ƒë·ªãa ch·ªâ l·∫•y h√†ng m·∫∑c ƒë·ªãnh
  pick_name      String? // ‚≠ê Th√™m t√™n ng∆∞·ªùi g·ª≠i/kho h√†ng m·∫∑c ƒë·ªãnh
}

model Store {
  id        Int      @id @default(autoincrement())
  name      String
  image     String?
  address   String
  mobile    String
  link      String
  iframe    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id            Int      @id @default(autoincrement())
  title         String
  slug          String   @unique
  description   String
  code          String
  thumb         String
  price         Float
  discount      Float
  sold          Int      @default(0)
  status        String   @default("C√≤n h√†ng")
  averageRating Float    @default(0) // ‚≠ê Trung b√¨nh sao
  ratingCount   Int      @default(0) // üí¨ S·ªë l∆∞·ª£ng ƒë√°nh gi√°
  tags          String[]
  images        String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  brandId Int?
  brand   Brand? @relation(fields: [brandId], references: [id])

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  colorId Int?
  color   Color? @relation(fields: [colorId], references: [id])

  // C√°c tr∆∞·ªùng c√¢n n·∫∑ng ƒë√£ th√™m tr∆∞·ªõc ƒë√≥
  weight                  Float         @default(0) // Gi√° tr·ªã c√¢n n·∫∑ng
  weightUnit              String        @default("gram") // ƒê∆°n v·ªã c√¢n n·∫∑ng (e.g., "gram", "kg")

  // Tr∆∞·ªùng 'unit' m·ªõi ƒë∆∞·ª£c th√™m v√†o ƒë√¢y
  unit                    String        @default("c√°i") // ƒê∆°n v·ªã t√≠nh c·ªßa s·∫£n ph·∫©m (e.g., "c√°i", "mi·∫øng", "h·ªôp", "b·ªô")

  size ProductSize[]

  variants Variant[]

  ratings   Rating[]
  OrderItem OrderItem[]
}

model Variant {
  id        Int      @id @default(autoincrement())
  title     String
  price     Float
  discount  Float
  thumb     String
  images    String[]
  sku       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  colorId Int?
  color   Color? @relation(fields: [colorId], references: [id])

  sizes     VariantSize[]
  OrderItem OrderItem[]
}

model ProductSize {
  productId Int
  sizeId    Int

  quantity  Int     @default(0) // S·ªë l∆∞·ª£ng s·∫£n ph·∫©m c√≥ trong kho cho size n√†y

  product Product @relation(fields: [productId], references: [id])
  size    Size    @relation(fields: [sizeId], references: [id])

  @@id([productId, sizeId])
}

model VariantSize {
  variantId Int
  sizeId    Int

  quantity  Int     @default(0)

  variant Variant @relation(fields: [variantId], references: [id], onDelete: Cascade)
  size    Size    @relation(fields: [sizeId], references: [id], onDelete: Cascade)

  @@id([variantId, sizeId])
}

model Rating {
  id         Int      @id @default(autoincrement())
  star       Int
  comment    String
  postedBy   User     @relation(fields: [postedById], references: [id])
  postedById Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

model Blog {
  id          Int          @id @default(autoincrement())
  title       String
  slug        String       @unique
  description String
  thumb       String?
  content     Json
  categoryId  Int
  category    BlogCategory @relation(fields: [categoryId], references: [id])
  numberViews Int          @default(0)

  likes       User[]  @relation("BlogLikes")
  dislikes    User[]  @relation("BlogDislikes")
  isPublished Boolean @default(false)

  createdById Int?
  createdBy   User? @relation("CreatedBlogs", fields: [createdById], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogCategory {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  slug      String   @unique
  image     String?
  blogs     Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShippingAddress {
  id          Int      @id @default(autoincrement())
  userId      Int
  fullName    String // T√™n ng∆∞·ªùi nh·∫≠n
  phone       String
  address     String // ƒê·ªãa ch·ªâ c·ª• th·ªÉ (VD: 123 ƒê∆∞·ªùng ABC)

  // ‚≠ê ƒê·ªïi t√™n c√°c tr∆∞·ªùng ƒë·ªÉ ph·∫£n √°nh r√µ r√†ng h∆°n ƒë√¢y l√† t√™n ƒë·ªãa ƒëi·ªÉm
  ward    String? // T√™n Ph∆∞·ªùng/x√£ (VD: "Ph∆∞·ªùng B·∫øn Ngh√©")
  district String? // T√™n Qu·∫≠n/huy·ªán (VD: "Qu·∫≠n 1")
  province String? // T√™n T·ªânh/th√†nh (VD: "TP H·ªì Ch√≠ Minh")

  // ‚≠ê C√¢n nh·∫Øc th√™m ID c·ªßa ƒë·ªãa ch·ªâ t·ª´ GHTK ƒë·ªÉ ƒë·ªìng b·ªô t·ªët h∆°n
  // ƒêi·ªÅu n√†y gi√∫p b·∫°n tr√°nh c√°c l·ªói v·ªÅ t√™n kh√¥ng kh·ªõp v·ªõi GHTK sau n√†y
  wardId      Int?    // ID Ph∆∞·ªùng/x√£ t·ª´ GHTK (n·∫øu c√≥, VD: GHTK Ward ID)
  districtId  Int?    // ID Qu·∫≠n/huy·ªán t·ª´ GHTK
  provinceId  Int?    // ID T·ªânh/th√†nh t·ª´ GHTK

  isDefault   Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User    @relation(fields: [userId], references: [id])
  orders      Order[]
}

model Order {
  id                Int  @id @default(autoincrement())
  userId            Int
  shippingAddressId Int
  couponId          Int?
  shippingFee       Float?

  user            User            @relation(fields: [userId], references: [id])
  shippingAddress ShippingAddress @relation(fields: [shippingAddressId], references: [id])
  coupon          Coupon?         @relation(fields: [couponId], references: [id])
  items           OrderItem[]

  status        String  @default("pending")
  paymentMethod String  @default("COD") // 'COD' | 'VNPay' | 'Momo' | etc.
  note          String?

  totalAmount    Float
  discountAmount Float @default(0)
  finalAmount    Float

  cancelReason String?

  ghtkLabel String?
  ghtkStatus String?
  ghtkTrackingUrl String?
  // ‚≠ê C√¢n nh·∫Øc th√™m ghtkCodAmount (ti·ªÅn COD th·ª±c t·∫ø GHTK thu h·ªô) n·∫øu c·∫ßn ƒë·ªëi so√°t
  ghtkCodAmount     Decimal?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        Int  @id @default(autoincrement())
  orderId   Int
  productId Int? // Cho product KH√îNG c√≥ variant
  variantId Int? // Cho product C√ì variant
  sizeId    Int?
  colorId   Int?

  quantity Int
  price    Float // Gi√° t·∫°i th·ªùi ƒëi·ªÉm ƒë·∫∑t
  discount Float @default(0)

  order   Order    @relation(fields: [orderId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
  variant Variant? @relation(fields: [variantId], references: [id])
  size    Size?    @relation(fields: [sizeId], references: [id])
  color   Color?   @relation(fields: [colorId], references: [id])
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255) 
  email     String   @db.VarChar(255) 
  mobile    String?  @db.VarChar(20) 
  comment   String   @db.Text        
  status    String   @default("PENDING")
  type      String  @default("CONTACT") 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

