import { ConfigService } from '@nestjs/config';
import { CalculateFeeDto } from './dto/calculate-fee.dto';
import { GHTKShipFeeResponse, GHTKCreateOrderResponse, GHTKProvinceResponse, GHTKDistrictResponse, GHTKWardResponse, GHTKTrackingResponse, GHTKCancelOrderResponse } from './interfaces/ghtk.interface';
import { PrismaService } from 'prisma/prisma.service';
export declare class GhtkService {
    private configService;
    private prisma;
    private readonly logger;
    private ghtkApi;
    private readonly GHTK_BASE_API_URL;
    private readonly GHTK_API_TOKEN;
    private readonly GHTK_PARTNER_CODE;
    private readonly GHTK_FEE_PATH;
    private readonly GHTK_ORDER_PATH;
    private readonly GHTK_CANCEL_ORDER_PATH;
    private readonly GHTK_TRACKING_PATH;
    private readonly GHTK_PRINT_LABEL_PATH;
    private readonly GHTK_PUBLIC_PROVINCE_PATH;
    private readonly GHTK_PUBLIC_DISTRICT_PATH;
    private readonly GHTK_PUBLIC_WARD_PATH;
    private defaultPickupConfig;
    constructor(configService: ConfigService, prisma: PrismaService);
    private loadDefaultPickupConfig;
    private sendGetRequest;
    private sendPostRequest;
    private sendDeleteRequest;
    calculateShippingFee(data: CalculateFeeDto): Promise<GHTKShipFeeResponse>;
    createGHTKOrder(orderId: number): Promise<GHTKCreateOrderResponse['order']>;
    getProvinces(): Promise<GHTKProvinceResponse['data']>;
    getDistricts(provinceId: number): Promise<GHTKDistrictResponse['data']>;
    getWards(districtId: number): Promise<GHTKWardResponse['data']>;
    trackGHTKOrder(ghtkLabel: string): Promise<GHTKTrackingResponse>;
    getPrintLabelUrl(ghtkLabel: string): Promise<string>;
    cancelGHTKOrder(ghtkLabel: string): Promise<GHTKCancelOrderResponse>;
}
